name: FastAPI Docker Image Test, Build and Push to DockerHub

on:
  push:
    branches: [ "main", "feature/**"]
  # pull_request:
  #   branches: [ "main" ]

jobs:

  code-quality:
    name: Check coding standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: poetry

      - name: Install Python dependencies
        run: poetry install

      - name: Check code formatting
        run: poetry run poe black-check


  test:
    name: Run tests
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run poe test-unit

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: htmlcov

  docker:
    name: Build and Push to DockerHub
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: san99tiago/fastapi-docker-github-actions

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: src
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
